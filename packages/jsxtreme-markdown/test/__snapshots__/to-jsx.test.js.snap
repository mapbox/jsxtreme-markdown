// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toJsx documentation example 1`] = `
"<div>
  <h1>Title</h1>
  <p>
    {\\" \\"}
    Here is some <strong>markdown</strong>. So <em>easy</em> to write. You can
    interpolate JS expressions like {data.number}
    or {dogs.map((d) => d.name).join(\\", \\")}. You can also interpolate JSX
    elements, whether <span>inline</span> or as a block:
  </p>
  <div className=\\"fancy-class\\">This is a block.</div>
  <p>
    {\\" \\"}
    You can even break up JSX interpolation to process more or your text as
    Markdown.
  </p>
  <div className=\\"fancy-class\\">
    <p>
      {\\" \\"}
      This is a <strong>Markdown</strong> paragraph inside the div. And this is
      another.
    </p>
  </div>
</div>;
"
`;

exports[`toJsx expression inside a link url 1`] = `
"<div>
  <p>
    Go to <a href=\\"/the/place/\\">the place</a>
  </p>
  <p>
    Go to <a href={\`\${thePlaceUrl}\`}>the place</a>
  </p>
  <p>
    Go to <a href={\`/the/\${placeUrl}\`}>the place</a>
  </p>
  <p>
    Go to <a href={\`\${theUrl}/place\`}>the place</a>
  </p>
</div>;
"
`;

exports[`toJsx expression inside a src url 1`] = `
"<div>
  <p>
    <img src=\\"/the/img.jpg\\" alt=\\"The image\\" />
  </p>
  <p>
    <img src={\`\${theImgUrl}.jpg\`} alt=\\"The image\\" />
  </p>
  <p>
    <img src={\`/the/\${imgUrl}\`} alt=\\"The image\\" />
  </p>
  <p>
    <img src={\`\${theUrl}/img.jpg\`} alt=\\"The image\\" />
  </p>
</div>;
"
`;

exports[`toJsx syntax highlighting clashing with delimiters 1`] = `
"<div>
  <p>I'm thinking of a {color}</p>
  <pre>
    <code className=\\"language-javascript\\">
      &lt;div style={\\"{\\"}
      {\\"{\\"} color: pink {\\"}\\"}
      {\\"}\\"}&gt;{color}&lt;/div&gt;{\\"\\\\n\\"}
    </code>
  </pre>
</div>;
"
`;

exports[`toJsx table alignment shows up in style properties, instead of align properties 1`] = `
"<div>
  <table>
    <thead>
      <tr>
        <th style={{ textAlign: \\"left\\" }}>Left-aligned</th>
        <th style={{ textAlign: \\"center\\" }}>Center-aligned</th>
        <th style={{ textAlign: \\"right\\" }}>Right-aligned</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style={{ textAlign: \\"left\\" }}>git status</td>
        <td style={{ textAlign: \\"center\\" }}>git status</td>
        <td style={{ textAlign: \\"right\\" }}>git status</td>
      </tr>
      <tr>
        <td style={{ textAlign: \\"left\\" }}>git diff</td>
        <td style={{ textAlign: \\"center\\" }}>git diff</td>
        <td style={{ textAlign: \\"right\\" }}>git diff</td>
      </tr>
    </tbody>
  </table>
</div>;
"
`;

exports[`toJsx with alternative delimiters 1`] = `
"<div>
  <p>This time there's {adjective} new delimiters.</p>
  <div style={{ margin: 70 }}>Did this work?</div>
</div>;
"
`;

exports[`toJsx with broken-up nested JSX 1`] = `
"<div>
  <p>
    This is a paragraph{\\" \\"}
    <span className=\\"foo\\">
      with a <strong>markdown</strong> span inside
    </span>
  </p>
  <div style={{ margin: 70 }}>
    <p>
      {\\" \\"}
      And here is a paragraph inside a div.
      <a href=\\"/some/url\\">Link</a>
    </p>
  </div>
</div>;
"
`;

exports[`toJsx with nested JSX 1`] = `
"<div>
  <p>
    This is a paragraph <span className=\\"foo\\">with a span inside</span>
  </p>
  <div style={{ margin: 70 }}>And here is a div.</div>
</div>;
"
`;

exports[`toJsx with simple expression 1`] = `
"<div>
  <h1>Title</h1>
  <p>
    And a <strong>special</strong>: {number}, {twice}.
  </p>
</div>;
"
`;
