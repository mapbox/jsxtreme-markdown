// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toComponentModule default options 1`] = `
"/*---
title: Everything is ok
---*/
import React from \\"react\\";

const frontMatter = {
  title: \\"Everything is ok\\"
};

export default class MarkdownReact extends React.PureComponent {
  render() {
    const props = this.props;
    return (
      <div>
        <h1>
          {frontMatter.title}
        </h1>
        <p>
          And a <strong>special</strong> number: {props.number}.
        </p>
      </div>
    );
  }
}
"
`;

exports[`toComponentModule default options produce valid module 1`] = `
"<div>
    <h1>Everything is ok</h1>
    <p>And a <strong>special</strong> number: 77.</p>
</div>"
`;

exports[`toComponentModule default options with prependJs in front matter 1`] = `
"/*---
title: Everything is ok
prependJs:
  - \\"const Timer = require('./timer')\\"
  - \\"const Watcher = require('./watcher').Watcher\\"
---*/
import React from \\"react\\";
const Timer = require(\\"./timer\\");
const Watcher = require(\\"./watcher\\").Watcher;

const frontMatter = {
  title: \\"Everything is ok\\"
};

export default class MarkdownReact extends React.PureComponent {
  render() {
    const props = this.props;
    return (
      <div>
        <h1>
          {frontMatter.title}
        </h1>
        <p>Some introductory text.</p>
        <Watcher />
        <p>
          This paragraph includes a <Timer />.
        </p>
      </div>
    );
  }
}
"
`;

exports[`toComponentModule documentation example, with wrapper front matter 1`] = `
"/*---
wrapper: '../wrapper'
prependJs:
  - \\"import Timer from './timer'\\"
  - \\"import { Watcher } from './watcher'\\"
title: Everything is ok
quantity: 834
---*/
import React from \\"react\\";
import Timer from \\"./timer\\";
import { Watcher } from \\"./watcher\\";
import Wrapper from \\"../wrapper\\";

const frontMatter = {
  title: \\"Everything is ok\\",
  quantity: 834
};

export default class MarkdownReact extends React.PureComponent {
  render() {
    const props = this.props;
    return (
      <Wrapper {...props} frontMatter={frontMatter}>
        <div>
          <h1>
            {frontMatter.title}
          </h1>
          <p>
            Some introductory text. The quantity is {frontMatter.quantity}
          </p>
          <Watcher />
          <p>
            This paragraph includes a <Timer />.
          </p>
          <p>
            This component also accepts a \\"foo\\" prop: {props.foo}
          </p>
        </div>
      </Wrapper>
    );
  }
}
"
`;

exports[`toComponentModule non-string primitives in front matter 1`] = `
"/*---
count: 7
isHonest: false
---*/
import React from \\"react\\";

const frontMatter = {
  count: 7,
  isHonest: false
};

export default class MarkdownReact extends React.PureComponent {
  render() {
    const props = this.props;
    return (
      <div>
        <p>
          count: {frontMatter.count}
        </p>
        <p>
          isHonest: {frontMatter.isHonest}
        </p>
      </div>
    );
  }
}
"
`;

exports[`toComponentModule options.name 1`] = `
"import React from \\"react\\";

const frontMatter = {};

export default class MySpecialName extends React.PureComponent {
  render() {
    const props = this.props;
    return <h1>Title</h1>;
  }
}
"
`;

exports[`toComponentModule options.precompile = true 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\"value\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require(\\"react\\");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return call && (typeof call === \\"object\\" || typeof call === \\"function\\") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function, not \\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*---
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               title: Everything is ok



var frontMatter = {
  title: \\"Everything is ok\\"
};

var MarkdownReact = function (_React$PureComponent) {
  _inherits(MarkdownReact, _React$PureComponent);

  function MarkdownReact() {
    _classCallCheck(this, MarkdownReact);

    return _possibleConstructorReturn(this, (MarkdownReact.__proto__ || Object.getPrototypeOf(MarkdownReact)).apply(this, arguments));
  }

  _createClass(MarkdownReact, [{
    key: \\"render\\",
    value: function render() {
      var props = this.props;
      return _react2.default.createElement(
        \\"div\\",
        null,
        _react2.default.createElement(
          \\"h1\\",
          null,
          frontMatter.title
        ),
        _react2.default.createElement(
          \\"p\\",
          null,
          \\"Some introductory text.\\"
        )
      );
    }
  }]);

  return MarkdownReact;
}(_react2.default.PureComponent);

exports.default = MarkdownReact;"
`;

exports[`toComponentModule options.precompile = true 2`] = `
"<div>
    <h1>Everything is ok</h1>
    <p>Some introductory text.</p>
</div>"
`;

exports[`toComponentModule options.prependJs 1`] = `
"/*---
title: Everything is ok
---*/
import React from \\"react\\";
import { Watcher } from \\"./watcher\\";

const frontMatter = {
  title: \\"Everything is ok\\"
};

export default class MarkdownReact extends React.PureComponent {
  render() {
    const props = this.props;
    return <Watcher />;
  }
}
"
`;

exports[`toComponentModule options.template 1`] = `
"MarkdownReact
{\\"title\\":\\"Foo\\",\\"list\\":[\\"one\\",\\"two\\"]}
<h1>{frontMatter.title}</h1>
"
`;

exports[`toComponentModule options.wrapper 1`] = `
"<div>
    <div>This is the wrapper. Here are its props:</div>
    <div>77</div>
    <div>Everything is ok</div>
    <div>834</div>
    <div>
        <h1>Everything is ok</h1>
        <p>Some introductory text. The quantity is 834</p>
        <p>Here is a number: 77</p>
    </div>
</div>"
`;

exports[`toComponentModule options.wrapper with ES2015 default export 1`] = `
"<div>
    <div>This is the wrapper. Here are its props:</div>
    <div>77</div>
    <div>Everything is ok</div>
    <div>834</div>
    <div>
        <h1>Everything is ok</h1>
        <p>Some introductory text. The quantity is 834</p>
        <p>Here is a number: 77</p>
    </div>
</div>"
`;

exports[`toComponentModule toJsx options 1`] = `
"/*---
title: Foo
list:
  - one
  - two
---*/
import React from \\"react\\";

const frontMatter = {
  title: \\"Foo\\",
  list: [\\"one\\", \\"two\\"]
};

export default class MarkdownReact extends React.PureComponent {
  render() {
    const props = this.props;
    return (
      <div>
        <h1>
          {frontMatter.title}
        </h1>
        <div className=\\"foo\\">
          <p>
            The default {\\"{\\"}
            {\\"{\\"} delimiter {\\"}\\"}
            {\\"}\\"} is ignored.
          </p>
        </div>
        <pre>
          <code className=\\"language-js\\">
            var x = 3;{\\"\\\\n\\"}
          </code>
        </pre>
      </div>
    );
  }
}
"
`;
